fn formatSkeleton obj stream =
(
	objSkin = obj.modifiers[#skin]
	if (objSkin != undefined) then
	(
		allBones = skinOps.GetBoneNodes objSkin
		bonesCount = allBones.count
		if (bonesCount > 0) then
		(
			format "%\"%\":%[%" (tabs 2) obj.name sp nl to:stream

			for bi = 1 to bonesCount do
			(
				b = allBones[bi]
				
				-- retrive parent boneID
				parentBoneID = -1
				if (b.parent != undefined) then
				(
					for bi2 = 1 to bonesCount do
					(
						if (b.parent == allBones[bi2]) then
						(
							parentBoneID = bi2 - 1
							break
						)
					)
				)
				
				newTransform = (getRelativeTransformForOpenGL b)
				
				format "%{%\"nm\":\"%\"" (tabs 3) sp b.name to:stream
				if (exportSkinBoneParent) then
				(
					format ",%\"pr\":%" sp parentBoneID to:stream
				)
				if (exportSkinBonePosition) then
				(
					format ",%\"ps\":%" sp (formatPoint3 newTransform.position) to:stream
				)
				if (exportSkinBoneRotation) then
				(
					-- inverse because 3ds max use left-hand axis rule internally, but it is inverted to use right-hand axis rule on display (MaxScript - Using Node Transform Properties : https://help.autodesk.com/view/MAXDEV/2022/ENU/?guid=GUID-3B001F21-8FE9-4663-A972-E648682A0ACD)
					format ",%\"rt\":%" sp (formatQuaternion (inverse newTransform.rotation)) to:stream
				)
				if (exportSkinBoneScale) then
				(
					format ",%\"sc\":%" sp (formatPoint3 newTransform.scale) to:stream
				)
				format "%}%%" sp (if bi != bonesCount then "," else "") nl to:stream
			)
			
			format "%%]%" nl (tabs 2) nl to:stream
		)
	)
)
